#!/bin/sh

################################
##     Configure for Axget    ##
##                            ##
## Copyright 2001-2012 Lintux ##
## Copyright 2013      Freyr  ##
################################

prefix='/usr/local'
bindir='$prefix/bin'
etcdir='$prefix/etc'
sharedir='$prefix/share'
mandir='$sharedir/man'
locale='$sharedir/locale'

i18n=1
debug=0
trace=1
strip=0
with_openssl=1
openssl_inc='/usr/include'
openssl_lib='/usr/lib'

arch=`uname -s`
config_H='src/config.H'

while [ -n "$1" ]; do
    e="`expr "$1" : '--\(.*=.*\)'`"
    if [ -z "$e" ]; then
        cat << EOF
Axel configure

Usage: $0 [OPTIONS]

Option             Description                         Default

--prefix=...       Directory to put files in           $prefix
--bindir=...                                           $bindir
--etcdir=...                                           $etcdir
--mandir=...                                           $mandir
--locale=...                                           $locale
--openssl-inc=...  Directory of openssl header files   $openssl_inc
--openssl-lib=...  Directory of openssl library files  $openssl_lib

--i18n=0/1         Disable/enable internationalization $i18n
--debug=0/1        Disable/enable debugging            $debug
--trace=0/1        Disable/enable generate trace file  $trace
--strip=0/1        Disable/enable binary stripping     $strip
--with-openssl=0/1 Disable/enable https support        $with_openssl
EOF
        exit;
    fi

    keyname=`expr "$e" : '\(.*\)=.*' | sed 's/[^a-z0-9_]/_/g'`
    value=`expr "$e" : '.*=\(.*\)' | sed "s/'/_/g"`

    eval "$keyname='$value'"
    shift;
done

# Expand $prefix
bindir=`eval echo $bindir`
etcdir=`eval echo $etcdir`
sharedir=`eval echo $sharedir`
mandir=`eval echo $mandir`
locale=`eval echo $locale`
if test "$etcdir" = "/usr/etc"; then
    # FHS explicitely forbids /usr/etc
    etcdir='/etc'
fi

cat << EOF > Makefile.settings
## Axel settings, generated by configure
PREFIX=$prefix
BINDIR=$bindir
ETCDIR=$etcdir
SHAREDIR=$sharedir
MANDIR=$mandir
LOCALE=$locale

OUTFILE=axget
ARCH=$arch

DESTDIR=

EOF

cat << EOF > ${config_H}
/* Axel settings, generated by configure */
#define _REENTRANT
#define _THREAD_SAFE
#define ETCDIR "$etcdir"
#define LOCALE "$locale"
#define ARCH "$arch"

EOF

AXEL_CFLAGS="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 ${CFLAGS}"
if [ "$debug" = "1" ]; then
    AXEL_CFLAGS="${AXEL_CFLAGS} -g"
    echo 'DEBUG=1' >> Makefile.settings
    echo '#define DEBUG' >> ${config_H};
else
    AXEL_CFLAGS="${AXEL_CFLAGS} -Os"
fi

if [ "$trace" = "1" ]; then
    echo '#define GEN_TRACE_FILE' >> ${config_H};
fi

if type msgfmt > /dev/null 2> /dev/null; then :;else
    echo 'WARNING: Internationalization disabled, you don'\''t have the necessary files'
    echo '         installed.'
    echo ''
    i18n=0;
fi

AXEL_LFLAGS=${LFLAGS}
if [ "$i18n" = "1" ]; then
    echo 'I18N=1' >> Makefile.settings
    echo '#define I18N' >> ${config_H}
    if [ -f /usr/local/include/libintl.h ]; then
        AXEL_CFLAGS="${AXEL_CFLAGS} -I/usr/local/include"
        AXEL_LFLAGS="${AXEL_LFLAGS} -L/usr/local/lib"
    elif [ -f /opt/csw/include/libintl.h ]; then
        AXEL_CFLAGS="${AXEL_CFLAGS} -I/opt/csw/include"
        AXEL_LFLAGS="${AXEL_LFLAGS} -L/opt/csw/lib"
    elif [ -f "${prefix}/include/libintl.h" ]; then
        AXEL_CFLAGS="${AXEL_CFLAGS} -I${prefix}/include"
        AXEL_LFLAGS="${AXEL_LFLAGS} -L${prefix}/lib"
    fi
fi

if [ "$with_openssl" = "1" ]; then
    echo 'WITH_OPENSSL=1' >> Makefile.settings
    echo '#define WITH_OPENSSL' >> ${config_H}
    if [ -f ${openssl_inc}/openssl/ssl.h ]; then
        AXEL_CFLAGS="${AXEL_CFLAGS} -I${openssl_inc}"
    else
        echo "[ERROR] openssl/ssl.h no found under ${openssl_inc} !"
        exit -1
    fi
    if [ -f ${openssl_lib}/libssl.so ]; then
        AXEL_LFLAGS="${AXEL_LFLAGS} -L${openssl_lib}"
    else
        echo "[ERROR] libssl.so no found under ${openssl_lib} !"
        exit -1
    fi
fi

if [ "${CC}" != "" ]; then
    echo "CC=${CC}" >> Makefile.settings;
elif type gcc > /dev/null 2> /dev/null; then
    echo "CC=gcc" >> Makefile.settings;
    AXEL_CFLAGS="${AXEL_CFLAGS} -Wall" # -Wno-unused-result
elif type cc > /dev/null 2> /dev/null; then
    echo "CC=cc" >> Makefile.settings;
else
    echo 'Cannot find a C compiler, aborting.'
    exit 1;
fi

if [ "$strip" = 0 ]; then
    echo "STRIP=\# skip strip" >> Makefile.settings;
else
    if [ "$debug" = 1 ]; then
        echo 'Stripping binaries does not make sense when debugging. Stripping disabled.'
        echo
        echo 'STRIP=\# skip strip' >> Makefile.settings
        strip=0;
    elif type strip > /dev/null 2> /dev/null; then
        echo "STRIP=strip" >> Makefile.settings;
    elif [ -x /usr/ccs/bin/strip ]; then
        echo "STRIP=/usr/ccs/bin/strip" >> Makefile.settings;
    else
        echo 'No strip utility found, cannot remove unnecessary parts from executable.'
        echo ''
        echo 'STRIP=\# skip strip' >> Makefile.settings
        strip=0;
    fi;
fi

case "$arch" in
FreeBSD )
    echo '#define NOGETOPTLONG' >> ${config_H}
    AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
    if [ "$i18n" = "1" ]; then
        AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
    fi
;;
OpenBSD )
    echo '#define NOGETOPTLONG' >> ${config_H}
    AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
    if [ "$i18n" = "1" ]; then
        AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
    fi
;;
NetBSD )
    echo 'WARNING: NetBSD not tested! Using OpenBSD settings.'
    echo '#define NOGETOPTLONG' >> ${config_H}
    AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
    if [ "$i18n" = "1" ]; then
        AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
    fi
;;
Darwin )
    echo '#define NOGETOPTLONG' >> ${config_H}
    AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
    if [ "$i18n" = "1" ]; then
        AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
    fi
    echo '#define DARWIN' >> ${config_H}
;;
Linux | GNU/kFreeBSD)
    AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
;;
SunOS )
    echo '#define NOGETOPTLONG' >> ${config_H}
    echo '#define BSD_COMP' >> ${config_H}
    AXEL_LFLAGS="${AXEL_LFLAGS} -pthread -lsocket -lnsl"
    if [ "$i18n" = "1" ]; then
        AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
    fi
;;
HP-UX )
    echo '#define NOGETOPTLONG' >> ${config_H}
    if [ "$i18n" = "1" ]; then
        if [ -d /usr/local/lib/hpux32 ]; then
            AXEL_LFLAGS="${AXEL_LFLAGS} -L/usr/local/lib/hpux32"
        fi
        AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
    fi
    AXEL_LFLAGS="${AXEL_LFLAGS} -lpthread"
;;
CYGWIN_* )
    AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
    if [ "$i18n" = "1" ]; then
        AXEL_LFLAGS="${AXEL_LFLAGS} -lintl"
    fi
    echo 'OUTFILE=axget.exe' >> Makefile.settings
;;
* )
    AXEL_LFLAGS="${AXEL_LFLAGS} -pthread"
    echo '#define NOGETOPTLONG' >> ${config_H}
    if [ "$i18n" = "1" ]; then
        AXEL_LFLAGS="${AXEL_LFLAGS} -lintl";
    fi
    echo 'WARNING: This architecture is unknown!'
    echo ''
    echo 'That does not mean Axel will not work, it just means Axel is not tested on it.'
    echo 'It'\''d be a great help if you could send me more information'
    echo 'about your platform so that it can be addedto the build tools.'
    echo 'You can try to build the program now, if you wish, this default setup might'
    echo 'just work.'
    echo ''
;;
esac

echo "CFLAGS=${AXEL_CFLAGS}" >> Makefile.settings
echo "LFLAGS=${AXEL_LFLAGS}" >> Makefile.settings

echo 'Configuration done:'
if [ "$i18n" = "1" ]; then
    echo '  Internationalization enabled.';
else
    echo '  Internationalization disabled.';
fi
if [ "$debug" = "1" ]; then
    echo '  Debugging enabled.';
else
    echo '  Debugging disabled.';
fi
if [ "$trace" = "1" ]; then
    echo '  Generate trace file enabled.';
else
    echo '  Generate trace file disabled.';
fi
if [ "$strip" = "1" ]; then
    echo '  Binary stripping enabled.';
else
    echo '  Binary stripping disabled.';
fi
if [ "$with_openssl" = "1" ]; then
    echo '  HTTPS support enabled.';
else
    echo '  HTTPS support disabled.';
fi
